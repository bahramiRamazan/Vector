{"remainingRequest":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/babel-loader/lib/index.js!/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/src/views/QuestionEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/src/views/QuestionEditor.vue","mtime":1610451202961},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL21udC8wNjJDQkIwNTJDQkFFRUI1L3Byb2plY3RzL3Z1ZS1pbnRyby9wb3JzYW4vZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBhcGlTZXJ2aWNlIH0gZnJvbSAiQC9jb21tb24vYXBpLnNlcnZpY2UuanMiOwppbXBvcnQgQmFzZUxheW91dCBmcm9tICJAL2NvbXBvbmVudHMvQmFzZUxheW91dC52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQmFzZUxheW91dDogQmFzZUxheW91dAogIH0sCiAgbmFtZTogIlF1ZXN0aW9uRWRpdG9yIiwKICBwcm9wczogewogICAgc2x1ZzogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGUxOiBudWxsLAogICAgICBpdGVtOiB7CiAgICAgICAgLy8uLi4KICAgICAgICBpbWFnZTogbnVsbCwKICAgICAgICBpbWFnZVVybDogbnVsbAogICAgICB9LAogICAgICBxdWVzdGlvbl9pbWFnZTogJycsCiAgICAgIHF1ZXN0aW9uX2JvZHk6ICcnLAogICAgICBlcnJvcjogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShlKSB7CiAgICAgIHZhciBmaWxlID0gZS50YXJnZXQuZmlsZXNbMF07CiAgICAgIHRoaXMuaW1hZ2UgPSBmaWxlOwogICAgICB0aGlzLml0ZW0uaW1hZ2VVcmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKHRoaXMuaW1hZ2UpOwogICAgfSwKICAgIG9uRmlsZUNoYW5nZTogZnVuY3Rpb24gb25GaWxlQ2hhbmdlKGUpIHsKICAgICAgdmFyIGZpbGVzID0gZS50YXJnZXQuZmlsZXMgfHwgZS5kYXRhVHJhbnNmZXIuZmlsZXM7CiAgICAgIGlmICghZmlsZXMubGVuZ3RoKSByZXR1cm47CiAgICAgIHRoaXMuY3JlYXRlSW1hZ2UoZmlsZXNbMF0pOwogICAgfSwKICAgIGNyZWF0ZUltYWdlOiBmdW5jdGlvbiBjcmVhdGVJbWFnZShmaWxlKSB7CiAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICB2YXIgdm0gPSB0aGlzOwoKICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgdm0ucXVlc3Rpb25faW1hZ2UgPSBlLnRhcmdldC5yZXN1bHQ7CiAgICAgIH07CgogICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTsKICAgIH0sCiAgICByZW1vdmVJbWFnZTogZnVuY3Rpb24gcmVtb3ZlSW1hZ2UoKSB7CiAgICAgIHRoaXMucXVlc3Rpb25faW1hZ2UgPSAnJzsKICAgIH0sCiAgICBvblN1Ym1pdDogZnVuY3Rpb24gb25TdWJtaXQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvLyBUZWxsIHRoZSBSRVNUIEFQSSB0byBjcmVhdGUgb3IgdXBkYXRlIGEgUXVlc3Rpb24gSW5zdGFuY2UKICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7IC8vIGZvcm1EYXRhLmFwcGVuZCgicXVlc3Rpb25faW1hZ2UiLCB0aGlzLmltYWdlKTsKCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgncXVlc3Rpb25faW1hZ2UnLCB0aGlzLnF1ZXN0aW9uX2ltYWdlKTsKCiAgICAgIGlmICghdGhpcy5xdWVzdGlvbl9ib2R5KSB7CiAgICAgICAgdGhpcy5lcnJvciA9ICJZb3UgY2FuJ3Qgc2VuZCBhbiBlbXB0eSBxdWVzdGlvbiEiOwogICAgICB9IGVsc2UgaWYgKHRoaXMucXVlc3Rpb25fYm9keS5sZW5ndGggPiAyNDApIHsKICAgICAgICB0aGlzLmVycm9yID0gIkVuc3VyZSB0aGlzIGZpZWxkIGhhcyBubyBtb3JlIHRoYW4gMjQwIGNoYXJhY3RlcnMhIjsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgZW5kcG9pbnQgPSAiL2FwaS9xdWVzdGlvbnMvIjsKICAgICAgICB2YXIgbWV0aG9kID0gIlBPU1QiOwoKICAgICAgICBpZiAodGhpcy5zbHVnICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIGVuZHBvaW50ICs9ICIiLmNvbmNhdCh0aGlzLnNsdWcsICIvIik7CiAgICAgICAgICBtZXRob2QgPSAiUFVUIjsKICAgICAgICB9CgogICAgICAgIGFwaVNlcnZpY2UoZW5kcG9pbnQsIG1ldGhvZCwgewogICAgICAgICAgY29udGVudDogdGhpcy5xdWVzdGlvbl9ib2R5LAogICAgICAgICAgcXVlc3Rpb25faW1hZ2U6IHRoaXMucXVlc3Rpb25faW1hZ2UKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChxdWVzdGlvbl9kYXRhKSB7CiAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICBuYW1lOiAncXVlc3Rpb24nLAogICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICBzbHVnOiBxdWVzdGlvbl9kYXRhLnNsdWcKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIGJlZm9yZVJvdXRlRW50ZXI6IGZ1bmN0aW9uIGJlZm9yZVJvdXRlRW50ZXIodG8sIGZyb20sIG5leHQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBlbmRwb2ludCwgZGF0YTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmICghKHRvLnBhcmFtcy5zbHVnICE9PSB1bmRlZmluZWQpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgZW5kcG9pbnQgPSAiL2FwaS9xdWVzdGlvbnMvIi5jb25jYXQodG8ucGFyYW1zLnNsdWcsICIvIik7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIGFwaVNlcnZpY2UoZW5kcG9pbnQpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIG5leHQoZnVuY3Rpb24gKHZtKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdm0ucXVlc3Rpb25fYm9keSA9IGRhdGEuY29udGVudDsKICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgbmV4dCgpKTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICBkb2N1bWVudC50aXRsZSA9ICJFZGl0b3IgLSBRdWVzdGlvblRpbWUiOwogIH0KfTs="},{"version":3,"sources":["QuestionEditor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page\">\n    <div bmt-12>\n    </div>\n\n    <BaseLayout>\n      <template v-slot:right>\n            <b-card bg-variant=\"light\">\n  <div class=\"container mt-2\">\n    <h1 class=\"mb-3\">Ask a Question</h1>\n    <form @submit.prevent=\"onSubmit\">\n      <textarea\n        v-model=\"question_body\"\n        class=\"form-control\"\n        placeholder=\"What do you want to ask?\"\n        rows=\"3\"\n      ></textarea>\n  <br>\n\n\n\n <b-form-file\n      v-model=\"question_image\"\n      :state=\"Boolean(file1)\"\n      placeholder=\"Choose a file or drop it here...\"\n      drop-placeholder=\"Drop file here...\"\n    ></b-form-file>\n    <div class=\"mt-3\">Selected file: {{ file1 ? file1.name : '' }}</div>\n\n  \n\n  \n      <br>\n\n\n  <!-- <input type=\"file\" accept=\"image/*\" @change=\"onChange\" />\n  <div id=\"preview\">\n    <img v-if=\"item.imageUrl\" :src=\"item.imageUrl\" />\n  </div>\n\n\n\n  <div v-if=\"!question_image\">\n    <h2>Select an image</h2>\n    <input type=\"file\" @change=\"onFileChange\">\n  </div>\n  <div v-else>\n    <img :src=\"question_image\" />\n    <button @click=\"removeImage\">Remove image</button>\n  </div>\n\n\n -->\n\n\n\n\n\n\n\n\n\n\n      <button\n        type=\"submit\"\n        class=\"btn btn-success\"\n        >Publish\n      </button>\n    </form>\n    <p v-if=\"error\" class=\"muted mt-2\">{{ error }}</p>\n  </div>\n          </b-card>\n      </template>\n    </BaseLayout>\n  </div>\n</template>\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport BaseLayout from \"@/components/BaseLayout.vue\";\nexport default {\n      components: {\n    BaseLayout\n  },\n  name: \"QuestionEditor\",\n  props: {\n    slug: {\n      type: String,\n      required: false\n    }\n  },\n  data() {\n    return {\n       file1: null,\n       \n            item:{\n          //...\n          image : null,\n          imageUrl: null\n      },\n      question_image:'',\n        question_body:'',\n \n      error: null\n    }\n  },\n  methods: {\n\n   onChange(e) {\n      const file = e.target.files[0]\n      this.image = file\n      this.item.imageUrl = URL.createObjectURL(this.image)\n    \n  },\n \n\n\n\n\n\nonFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length)\n        return;\n      this.createImage(files[0]);\n    },\n    createImage(file) {                                               \n    \n      var reader = new FileReader();\n      var vm = this;\n\n      reader.onload = (e) => {\n        vm.question_image = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    removeImage: function () {\n      this.question_image = '';\n    },\n    onSubmit() {\n      // Tell the REST API to create or update a Question Instance\n        const formData = new FormData();\n        // formData.append(\"question_image\", this.image);\n         formData.append('question_image', this.question_image)\n\n \n      if (!this.question_body) {\n        this.error = \"You can't send an empty question!\";\n      } else if (this.question_body.length > 240) {\n        this.error = \"Ensure this field has no more than 240 characters!\";\n      } else {\n        let endpoint = \"/api/questions/\";\n        let method = \"POST\"; \n        if (this.slug !== undefined) {\n          endpoint += `${ this.slug }/`;\n          method = \"PUT\";\n        }     \n        apiService(endpoint, method, { content: this.question_body, question_image:this.question_image})\n          .then(question_data => {\n            this.$router.push({ \n              name: 'question', \n              params: { slug: question_data.slug }\n            })          \n          })  \n      }\n    }\n  },\n  async beforeRouteEnter(to, from, next) {\n    // if the component will be used to update a question, then get the question's data from the REST API\n    if (to.params.slug !== undefined) {\n      let endpoint = `/api/questions/${ to.params.slug }/`;\n      let data = await apiService(endpoint);\n      return next(vm => (vm.question_body = data.content))\n    } else {\n      return next();\n    }   \n  },\n  created() {\n    document.title = \"Editor - QuestionTime\";\n  }  \n}\n</script>\n"],"sourceRoot":"src/views"}]}