{"remainingRequest":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/babel-loader/lib/index.js!/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/src/views/AnswerEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/src/views/AnswerEditor.vue","mtime":1607836690417},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL21udC8wNjJDQkIwNTJDQkFFRUI1L3Byb2plY3RzL3Z1ZS1pbnRyby9wb3JzYW4vZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBhcGlTZXJ2aWNlIH0gZnJvbSAiQC9jb21tb24vYXBpLnNlcnZpY2UuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFuc3dlckVkaXRvciIsCiAgcHJvcHM6IHsKICAgIGlkOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBxdWVzdGlvblNsdWc6IG51bGwsCiAgICAgIGFuc3dlckJvZHk6IG51bGwsCiAgICAgIGVycm9yOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgb25TdWJtaXQ6IGZ1bmN0aW9uIG9uU3VibWl0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuYW5zd2VyQm9keSkgewogICAgICAgIHZhciBlbmRwb2ludCA9ICIvYXBpL2Fuc3dlcnMvIi5jb25jYXQodGhpcy5pZCwgIi8iKTsKICAgICAgICBhcGlTZXJ2aWNlKGVuZHBvaW50LCAiUFVUIiwgewogICAgICAgICAgYm9keTogdGhpcy5hbnN3ZXJCb2R5CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICBuYW1lOiAicXVlc3Rpb24iLAogICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICBzbHVnOiBfdGhpcy5xdWVzdGlvblNsdWcKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5lcnJvciA9ICJZb3UgY2FuJ3Qgc3VibWl0IGFuIGVtcHR5IGFuc3dlciEiOwogICAgICB9CiAgICB9CiAgfSwKICBiZWZvcmVSb3V0ZUVudGVyOiBmdW5jdGlvbiBiZWZvcmVSb3V0ZUVudGVyKHRvLCBmcm9tLCBuZXh0KSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgZW5kcG9pbnQsIGRhdGE7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAvLyBnZXQgdGhlIGFuc3dlcidzIGRhdGEgZnJvbSB0aGUgUkVTVCBBUEkgYW5kIHNldCB0d28gZGF0YSBwcm9wZXJ0aWVzIGZvciB0aGUgY29tcG9uZW50CiAgICAgICAgICAgICAgZW5kcG9pbnQgPSAiL2FwaS9hbnN3ZXJzLyIuY29uY2F0KHRvLnBhcmFtcy5pZCwgIi8iKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXBpU2VydmljZShlbmRwb2ludCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgbmV4dChmdW5jdGlvbiAodm0pIHsKICAgICAgICAgICAgICAgIHJldHVybiB2bS5hbnN3ZXJCb2R5ID0gZGF0YS5ib2R5LCB2bS5xdWVzdGlvblNsdWcgPSBkYXRhLnF1ZXN0aW9uX3NsdWc7CiAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["AnswerEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,UAAA,QAAA,yBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA;AAHA,KAAA;AAKA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,UAAA,KAAA,UAAA,EAAA;AACA,YAAA,QAAA,0BAAA,KAAA,EAAA,MAAA;AACA,QAAA,UAAA,CAAA,QAAA,EAAA,KAAA,EAAA;AAAA,UAAA,IAAA,EAAA,KAAA;AAAA,SAAA,CAAA,CACA,IADA,CACA,YAAA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA,UADA;AAEA,YAAA,MAAA,EAAA;AAAA,cAAA,IAAA,EAAA,KAAA,CAAA;AAAA;AAFA,WAAA;AAIA,SANA;AAOA,OATA,MASA;AACA,aAAA,KAAA,GAAA,mCAAA;AACA;AACA;AAdA,GAfA;AA+BA,EAAA,gBA/BA,4BA+BA,EA/BA,EA+BA,IA/BA,EA+BA,IA/BA,EA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,cAAA,QAFA,0BAEA,EAAA,CAAA,MAAA,CAAA,EAFA;AAAA;AAAA,qBAGA,UAAA,CAAA,QAAA,CAHA;;AAAA;AAGA,cAAA,IAHA;AAAA,+CAIA,IAAA,CAAA,UAAA,EAAA;AAAA,uBACA,EAAA,CAAA,UAAA,GAAA,IAAA,CAAA,IAAA,EACA,EAAA,CAAA,YAAA,GAAA,IAAA,CAAA,aAFA;AAAA,eAAA,CAJA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAvCA,CAAA","sourcesContent":["<template>\n  <div class=\"container mt-2\">\n    <h1 class=\"mb-3\">Edit Your Answer</h1>\n    <form @submit.prevent=\"onSubmit\">\n      <textarea \n        v-model=\"answerBody\" \n        class=\"form-control\" \n        rows=\"3\"\n      ></textarea>\n      <br>\n      <button \n        type=\"submit\" \n        class=\"btn btn-success\"\n        >Publish your answer\n      </button>\n    </form>\n    <p v-if=\"error\" class=\"muted mt-2\">{{ error }}</p>\n  </div>\n</template>\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nexport default {\n  name: \"AnswerEditor\",\n  props: {\n    id: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      questionSlug: null,\n      answerBody: null,\n      error: null\n    }\n  },\n  methods: {\n    onSubmit() {\n      if (this.answerBody) {\n        let endpoint = `/api/answers/${this.id}/`;\n        apiService(endpoint, \"PUT\", { body: this.answerBody })\n          .then(() => {\n            this.$router.push({\n              name: \"question\",\n              params: { slug: this.questionSlug }\n            })\n          })\n      } else {\n        this.error = \"You can't submit an empty answer!\";\n      }\n    }\n  },\n  async beforeRouteEnter(to, from, next) {\n    // get the answer's data from the REST API and set two data properties for the component\n    let endpoint = `/api/answers/${to.params.id}/`;\n    let data = await apiService(endpoint);\n    return next(vm => (\n      vm.answerBody = data.body,\n      vm.questionSlug = data.question_slug\n    ));\n  }\n};\n</script>\n"],"sourceRoot":"src/views"}]}