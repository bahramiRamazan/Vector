{"remainingRequest":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/src/views/QuestionEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/src/views/QuestionEditor.vue","mtime":1610451202961},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGFwaVNlcnZpY2UgfSBmcm9tICJAL2NvbW1vbi9hcGkuc2VydmljZS5qcyI7CmltcG9ydCBCYXNlTGF5b3V0IGZyb20gIkAvY29tcG9uZW50cy9CYXNlTGF5b3V0LnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICAgICAgY29tcG9uZW50czogewogICAgQmFzZUxheW91dAogIH0sCiAgbmFtZTogIlF1ZXN0aW9uRWRpdG9yIiwKICBwcm9wczogewogICAgc2x1ZzogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgICBmaWxlMTogbnVsbCwKICAgICAgIAogICAgICAgICAgICBpdGVtOnsKICAgICAgICAgIC8vLi4uCiAgICAgICAgICBpbWFnZSA6IG51bGwsCiAgICAgICAgICBpbWFnZVVybDogbnVsbAogICAgICB9LAogICAgICBxdWVzdGlvbl9pbWFnZTonJywKICAgICAgICBxdWVzdGlvbl9ib2R5OicnLAogCiAgICAgIGVycm9yOiBudWxsCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CgogICBvbkNoYW5nZShlKSB7CiAgICAgIGNvbnN0IGZpbGUgPSBlLnRhcmdldC5maWxlc1swXQogICAgICB0aGlzLmltYWdlID0gZmlsZQogICAgICB0aGlzLml0ZW0uaW1hZ2VVcmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKHRoaXMuaW1hZ2UpCiAgICAKICB9LAogCgoKCgoKb25GaWxlQ2hhbmdlKGUpIHsKICAgICAgdmFyIGZpbGVzID0gZS50YXJnZXQuZmlsZXMgfHwgZS5kYXRhVHJhbnNmZXIuZmlsZXM7CiAgICAgIGlmICghZmlsZXMubGVuZ3RoKQogICAgICAgIHJldHVybjsKICAgICAgdGhpcy5jcmVhdGVJbWFnZShmaWxlc1swXSk7CiAgICB9LAogICAgY3JlYXRlSW1hZ2UoZmlsZSkgeyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAKICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHZhciB2bSA9IHRoaXM7CgogICAgICByZWFkZXIub25sb2FkID0gKGUpID0+IHsKICAgICAgICB2bS5xdWVzdGlvbl9pbWFnZSA9IGUudGFyZ2V0LnJlc3VsdDsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7CiAgICB9LAogICAgcmVtb3ZlSW1hZ2U6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy5xdWVzdGlvbl9pbWFnZSA9ICcnOwogICAgfSwKICAgIG9uU3VibWl0KCkgewogICAgICAvLyBUZWxsIHRoZSBSRVNUIEFQSSB0byBjcmVhdGUgb3IgdXBkYXRlIGEgUXVlc3Rpb24gSW5zdGFuY2UKICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgIC8vIGZvcm1EYXRhLmFwcGVuZCgicXVlc3Rpb25faW1hZ2UiLCB0aGlzLmltYWdlKTsKICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdxdWVzdGlvbl9pbWFnZScsIHRoaXMucXVlc3Rpb25faW1hZ2UpCgogCiAgICAgIGlmICghdGhpcy5xdWVzdGlvbl9ib2R5KSB7CiAgICAgICAgdGhpcy5lcnJvciA9ICJZb3UgY2FuJ3Qgc2VuZCBhbiBlbXB0eSBxdWVzdGlvbiEiOwogICAgICB9IGVsc2UgaWYgKHRoaXMucXVlc3Rpb25fYm9keS5sZW5ndGggPiAyNDApIHsKICAgICAgICB0aGlzLmVycm9yID0gIkVuc3VyZSB0aGlzIGZpZWxkIGhhcyBubyBtb3JlIHRoYW4gMjQwIGNoYXJhY3RlcnMhIjsKICAgICAgfSBlbHNlIHsKICAgICAgICBsZXQgZW5kcG9pbnQgPSAiL2FwaS9xdWVzdGlvbnMvIjsKICAgICAgICBsZXQgbWV0aG9kID0gIlBPU1QiOyAKICAgICAgICBpZiAodGhpcy5zbHVnICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIGVuZHBvaW50ICs9IGAkeyB0aGlzLnNsdWcgfS9gOwogICAgICAgICAgbWV0aG9kID0gIlBVVCI7CiAgICAgICAgfSAgICAgCiAgICAgICAgYXBpU2VydmljZShlbmRwb2ludCwgbWV0aG9kLCB7IGNvbnRlbnQ6IHRoaXMucXVlc3Rpb25fYm9keSwgcXVlc3Rpb25faW1hZ2U6dGhpcy5xdWVzdGlvbl9pbWFnZX0pCiAgICAgICAgICAudGhlbihxdWVzdGlvbl9kYXRhID0+IHsKICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyAKICAgICAgICAgICAgICBuYW1lOiAncXVlc3Rpb24nLCAKICAgICAgICAgICAgICBwYXJhbXM6IHsgc2x1ZzogcXVlc3Rpb25fZGF0YS5zbHVnIH0KICAgICAgICAgICAgfSkgICAgICAgICAgCiAgICAgICAgICB9KSAgCiAgICAgIH0KICAgIH0KICB9LAogIGFzeW5jIGJlZm9yZVJvdXRlRW50ZXIodG8sIGZyb20sIG5leHQpIHsKICAgIC8vIGlmIHRoZSBjb21wb25lbnQgd2lsbCBiZSB1c2VkIHRvIHVwZGF0ZSBhIHF1ZXN0aW9uLCB0aGVuIGdldCB0aGUgcXVlc3Rpb24ncyBkYXRhIGZyb20gdGhlIFJFU1QgQVBJCiAgICBpZiAodG8ucGFyYW1zLnNsdWcgIT09IHVuZGVmaW5lZCkgewogICAgICBsZXQgZW5kcG9pbnQgPSBgL2FwaS9xdWVzdGlvbnMvJHsgdG8ucGFyYW1zLnNsdWcgfS9gOwogICAgICBsZXQgZGF0YSA9IGF3YWl0IGFwaVNlcnZpY2UoZW5kcG9pbnQpOwogICAgICByZXR1cm4gbmV4dCh2bSA9PiAodm0ucXVlc3Rpb25fYm9keSA9IGRhdGEuY29udGVudCkpCiAgICB9IGVsc2UgewogICAgICByZXR1cm4gbmV4dCgpOwogICAgfSAgIAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGRvY3VtZW50LnRpdGxlID0gIkVkaXRvciAtIFF1ZXN0aW9uVGltZSI7CiAgfSAgCn0K"},{"version":3,"sources":["QuestionEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionEditor.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"page\">\n    <div bmt-12>\n    </div>\n\n    <BaseLayout>\n      <template v-slot:right>\n            <b-card bg-variant=\"light\">\n  <div class=\"container mt-2\">\n    <h1 class=\"mb-3\">Ask a Question</h1>\n    <form @submit.prevent=\"onSubmit\">\n      <textarea\n        v-model=\"question_body\"\n        class=\"form-control\"\n        placeholder=\"What do you want to ask?\"\n        rows=\"3\"\n      ></textarea>\n  <br>\n\n\n\n <b-form-file\n      v-model=\"question_image\"\n      :state=\"Boolean(file1)\"\n      placeholder=\"Choose a file or drop it here...\"\n      drop-placeholder=\"Drop file here...\"\n    ></b-form-file>\n    <div class=\"mt-3\">Selected file: {{ file1 ? file1.name : '' }}</div>\n\n  \n\n  \n      <br>\n\n\n  <!-- <input type=\"file\" accept=\"image/*\" @change=\"onChange\" />\n  <div id=\"preview\">\n    <img v-if=\"item.imageUrl\" :src=\"item.imageUrl\" />\n  </div>\n\n\n\n  <div v-if=\"!question_image\">\n    <h2>Select an image</h2>\n    <input type=\"file\" @change=\"onFileChange\">\n  </div>\n  <div v-else>\n    <img :src=\"question_image\" />\n    <button @click=\"removeImage\">Remove image</button>\n  </div>\n\n\n -->\n\n\n\n\n\n\n\n\n\n\n      <button\n        type=\"submit\"\n        class=\"btn btn-success\"\n        >Publish\n      </button>\n    </form>\n    <p v-if=\"error\" class=\"muted mt-2\">{{ error }}</p>\n  </div>\n          </b-card>\n      </template>\n    </BaseLayout>\n  </div>\n</template>\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport BaseLayout from \"@/components/BaseLayout.vue\";\nexport default {\n      components: {\n    BaseLayout\n  },\n  name: \"QuestionEditor\",\n  props: {\n    slug: {\n      type: String,\n      required: false\n    }\n  },\n  data() {\n    return {\n       file1: null,\n       \n            item:{\n          //...\n          image : null,\n          imageUrl: null\n      },\n      question_image:'',\n        question_body:'',\n \n      error: null\n    }\n  },\n  methods: {\n\n   onChange(e) {\n      const file = e.target.files[0]\n      this.image = file\n      this.item.imageUrl = URL.createObjectURL(this.image)\n    \n  },\n \n\n\n\n\n\nonFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length)\n        return;\n      this.createImage(files[0]);\n    },\n    createImage(file) {                                               \n    \n      var reader = new FileReader();\n      var vm = this;\n\n      reader.onload = (e) => {\n        vm.question_image = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    removeImage: function () {\n      this.question_image = '';\n    },\n    onSubmit() {\n      // Tell the REST API to create or update a Question Instance\n        const formData = new FormData();\n        // formData.append(\"question_image\", this.image);\n         formData.append('question_image', this.question_image)\n\n \n      if (!this.question_body) {\n        this.error = \"You can't send an empty question!\";\n      } else if (this.question_body.length > 240) {\n        this.error = \"Ensure this field has no more than 240 characters!\";\n      } else {\n        let endpoint = \"/api/questions/\";\n        let method = \"POST\"; \n        if (this.slug !== undefined) {\n          endpoint += `${ this.slug }/`;\n          method = \"PUT\";\n        }     \n        apiService(endpoint, method, { content: this.question_body, question_image:this.question_image})\n          .then(question_data => {\n            this.$router.push({ \n              name: 'question', \n              params: { slug: question_data.slug }\n            })          \n          })  \n      }\n    }\n  },\n  async beforeRouteEnter(to, from, next) {\n    // if the component will be used to update a question, then get the question's data from the REST API\n    if (to.params.slug !== undefined) {\n      let endpoint = `/api/questions/${ to.params.slug }/`;\n      let data = await apiService(endpoint);\n      return next(vm => (vm.question_body = data.content))\n    } else {\n      return next();\n    }   \n  },\n  created() {\n    document.title = \"Editor - QuestionTime\";\n  }  \n}\n</script>\n"]}]}