{"remainingRequest":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/src/views/Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css&","dependencies":[{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/src/views/Home.vue","mtime":1609559709470},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/062CBB052CBAEEB5/projects/vue-intro/porsan/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI3NlY3Rpb24tZHJvcGRvd24gewogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KLnF1ZXN0aW9uewogIC8qIGRpcmVjdGlvbjogcnRsOyB0ZXh0LWFsaWduOiBqdXN0aWZ5OyAgKi8KICAgICAgZm9udC1mYW1pbHk6ICJJcmFuIFlla2FuIjsKICAgIC8qIGZvbnQtc2l6ZTogMTBweDsgKi8KICAgIGNvbG9yOmJsYWNrOwogICAgZm9udC1zaXplOjEuMXJlbTsKCn0KLnF1ZXN0aW9ucy1jbnR7CiAgLyogZmxvYXQ6bGVmdDsgKi8KICBib3JkZXI6MGNtOwogIGZvbnQtc2l6ZTowLjhyZW07Cn0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"page\">\n  \n    <BaseLayout>\n      <template v-slot:left>\n        <b-nav vertical pills>\n          <b-nav-item\n            v-for=\"s in sections\"\n            :key=\"s\"\n            :active=\"s == selectedSection\"\n            @click=\"selectedSection = s; getAllArticles()\"\n          >{{s}}</b-nav-item>\n        </b-nav>\n      </template>\n      <template v-slot:section-dropdown>\n        <b-form-select\n          v-model=\"selectedSection\"\n          :options=\"sections\"\n          @change=\"getAllArticles()\"\n          id=\"section-dropdown\"\n        ></b-form-select>\n      </template>\n\n      \n      <template v-slot:right>\n     <div class=\"container \">\n\n\n      <div v-for=\"question in questions\"\n           :key=\"question.pk\">\n      \n\n      <b-card\n          header-tag=\"header\"\n          header-bg-variant=\"dark\"\n\n          footer-tag=\"footer\"\n           footer-bg-variant=\"success\"\n          footer-border-variant=\"dark\"\n          title=\"سوال نمونه\"\n          style=\"text-align: justify;\"\n        >\n       <b-card-text>\n          <router-link\n            :to=\"{ name: 'question', params: { slug: question.slug } }\"\n            class=\"question-link question d-flex justify-content-between\"\n            >{{ question.content }}\n          </router-link>\n        </b-card-text>\n    <b-card-footer variant=\"success\" >\n      <span class=\"question-author \">{{ question.author }}\n        <b-avatar size=\"sm\" variant=\"info\">\n        </b-avatar>\n        </span>\n        <b-avatar size=\"sm\" variant=\"success\" >{{ question.answers_count }}</b-avatar>\n\n      \n    </b-card-footer>\n\n  </b-card>\n  <br>\n\n      \n      </div>\n      <div class=\"my-4 \">\n        <p v-show=\"loadingQuestions\">...loading...</p>\n        <button\n          v-show=\"next\"\n          @click=\"getQuestions\"\n          class=\"btn btn-sm btn-outline-success\"\n          >Load More\n        </button>\n      </div>\n    </div>\n      </template>\n    </BaseLayout>\n  </div>\n</template>\n<script>\n// @ is an alias to /src\nimport BaseLayout from \"@/components/BaseLayout.vue\";\nimport { requestsMixin } from \"@/mixins/requestsMixin\";\nimport { apiService } from \"@/common/api.service.js\";\nexport default {\n  name: \"home\",\n  components: {\n    BaseLayout\n  },\n  mixins: [requestsMixin],\n  data() {\n    return {\n      sections: `arts, automobiles, books, business, fashion,\n      food, health, home, insider, magazine, movies, national,\n      nyregion, obituaries, opinion, politics, realestate, science,\n      sports, sundayreview, technology, theater,\n      tmagazine, travel, upshot, world`\n        .split(\",\")\n        .map(s => s.trim()),\n      selectedSection: \"arts\",\n      articles: [],\n            questions: [],\n      next: null,\n      loadingQuestions: false\n    };\n  },\n  beforeMount() {\n    this.getAllArticles();\n        this.getQuestions()\n    document.title = \"AlefYa\";\n  },\n  methods: {\n    async getAllArticles() {\n      // const response = await this.getArticles(this.selectedSection);\n      // this.articles = response.data.results;\n    },\n    setSection() {\n      // this.getAllArticles();\n    },\n        getQuestions() {\n      // make a GET Request to the questions list endpoint and populate the questions array\n      let endpoint = \"/api/questions/\";\n      if (this.next) {\n        endpoint = this.next;\n      }\n      this.loadingQuestions = true;\n      apiService(endpoint)\n        .then(data => {\n \n          this.questions.push(...data.results)\n          this.loadingQuestions = false;\n          if (data.next) {\n            this.next = data.next;\n          } else {\n            this.next = null;\n          }\n        })\n    },  \n\n    getpreference() {\n      // make a GET Request to the questions list endpoint and populate the questions array\n  \n    }, \n    created() {\n    this.getQuestions()\n    document.title = \"AlefYa\";\n  }\n  }\n};\n</script>\n<style scoped>\n#section-dropdown {\n  margin-bottom: 10px;\n}\n.question{\n  /* direction: rtl; text-align: justify;  */\n      font-family: \"Iran Yekan\";\n    /* font-size: 10px; */\n    color:black;\n    font-size:1.1rem;\n\n}\n.questions-cnt{\n  /* float:left; */\n  border:0cm;\n  font-size:0.8rem;\n}\n</style>"]}]}