{"remainingRequest":"D:\\projects\\vue-intro\\porsan\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projects\\vue-intro\\porsan\\frontend\\src\\views\\QuestionEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projects\\vue-intro\\porsan\\frontend\\src\\views\\QuestionEditor.vue","mtime":1607836690559},{"path":"D:\\projects\\vue-intro\\porsan\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\vue-intro\\porsan\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projects\\vue-intro\\porsan\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\vue-intro\\porsan\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGFwaVNlcnZpY2UgfSBmcm9tICJAL2NvbW1vbi9hcGkuc2VydmljZS5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUXVlc3Rpb25FZGl0b3IiLAogIHByb3BzOiB7CiAgICBzbHVnOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcXVlc3Rpb25fYm9keTogbnVsbCwKICAgICAgZXJyb3I6IG51bGwKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9uU3VibWl0KCkgewogICAgICAvLyBUZWxsIHRoZSBSRVNUIEFQSSB0byBjcmVhdGUgb3IgdXBkYXRlIGEgUXVlc3Rpb24gSW5zdGFuY2UKICAgICAgaWYgKCF0aGlzLnF1ZXN0aW9uX2JvZHkpIHsKICAgICAgICB0aGlzLmVycm9yID0gIllvdSBjYW4ndCBzZW5kIGFuIGVtcHR5IHF1ZXN0aW9uISI7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5xdWVzdGlvbl9ib2R5Lmxlbmd0aCA+IDI0MCkgewogICAgICAgIHRoaXMuZXJyb3IgPSAiRW5zdXJlIHRoaXMgZmllbGQgaGFzIG5vIG1vcmUgdGhhbiAyNDAgY2hhcmFjdGVycyEiOwogICAgICB9IGVsc2UgewogICAgICAgIGxldCBlbmRwb2ludCA9ICIvYXBpL3F1ZXN0aW9ucy8iOwogICAgICAgIGxldCBtZXRob2QgPSAiUE9TVCI7IAogICAgICAgIGlmICh0aGlzLnNsdWcgIT09IHVuZGVmaW5lZCkgewogICAgICAgICAgZW5kcG9pbnQgKz0gYCR7IHRoaXMuc2x1ZyB9L2A7CiAgICAgICAgICBtZXRob2QgPSAiUFVUIjsKICAgICAgICB9ICAgICAKICAgICAgICBhcGlTZXJ2aWNlKGVuZHBvaW50LCBtZXRob2QsIHsgY29udGVudDogdGhpcy5xdWVzdGlvbl9ib2R5IH0pCiAgICAgICAgICAudGhlbihxdWVzdGlvbl9kYXRhID0+IHsKICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyAKICAgICAgICAgICAgICBuYW1lOiAncXVlc3Rpb24nLCAKICAgICAgICAgICAgICBwYXJhbXM6IHsgc2x1ZzogcXVlc3Rpb25fZGF0YS5zbHVnIH0KICAgICAgICAgICAgfSkgICAgICAgICAgCiAgICAgICAgICB9KSAgCiAgICAgIH0KICAgIH0KICB9LAogIGFzeW5jIGJlZm9yZVJvdXRlRW50ZXIodG8sIGZyb20sIG5leHQpIHsKICAgIC8vIGlmIHRoZSBjb21wb25lbnQgd2lsbCBiZSB1c2VkIHRvIHVwZGF0ZSBhIHF1ZXN0aW9uLCB0aGVuIGdldCB0aGUgcXVlc3Rpb24ncyBkYXRhIGZyb20gdGhlIFJFU1QgQVBJCiAgICBpZiAodG8ucGFyYW1zLnNsdWcgIT09IHVuZGVmaW5lZCkgewogICAgICBsZXQgZW5kcG9pbnQgPSBgL2FwaS9xdWVzdGlvbnMvJHsgdG8ucGFyYW1zLnNsdWcgfS9gOwogICAgICBsZXQgZGF0YSA9IGF3YWl0IGFwaVNlcnZpY2UoZW5kcG9pbnQpOwogICAgICByZXR1cm4gbmV4dCh2bSA9PiAodm0ucXVlc3Rpb25fYm9keSA9IGRhdGEuY29udGVudCkpCiAgICB9IGVsc2UgewogICAgICByZXR1cm4gbmV4dCgpOwogICAgfSAgIAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGRvY3VtZW50LnRpdGxlID0gIkVkaXRvciAtIFF1ZXN0aW9uVGltZSI7CiAgfSAgCn0K"},{"version":3,"sources":["QuestionEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionEditor.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container mt-2\">\n    <h1 class=\"mb-3\">Ask a Question</h1>\n    <form @submit.prevent=\"onSubmit\">\n      <textarea\n        v-model=\"question_body\"\n        class=\"form-control\"\n        placeholder=\"What do you want to ask?\"\n        rows=\"3\"\n      ></textarea>\n      <br>\n      <button\n        type=\"submit\"\n        class=\"btn btn-success\"\n        >Publish\n      </button>\n    </form>\n    <p v-if=\"error\" class=\"muted mt-2\">{{ error }}</p>\n  </div>\n</template>\n\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nexport default {\n  name: \"QuestionEditor\",\n  props: {\n    slug: {\n      type: String,\n      required: false\n    }\n  },\n  data() {\n    return {\n      question_body: null,\n      error: null\n    }\n  },\n  methods: {\n    onSubmit() {\n      // Tell the REST API to create or update a Question Instance\n      if (!this.question_body) {\n        this.error = \"You can't send an empty question!\";\n      } else if (this.question_body.length > 240) {\n        this.error = \"Ensure this field has no more than 240 characters!\";\n      } else {\n        let endpoint = \"/api/questions/\";\n        let method = \"POST\"; \n        if (this.slug !== undefined) {\n          endpoint += `${ this.slug }/`;\n          method = \"PUT\";\n        }     \n        apiService(endpoint, method, { content: this.question_body })\n          .then(question_data => {\n            this.$router.push({ \n              name: 'question', \n              params: { slug: question_data.slug }\n            })          \n          })  \n      }\n    }\n  },\n  async beforeRouteEnter(to, from, next) {\n    // if the component will be used to update a question, then get the question's data from the REST API\n    if (to.params.slug !== undefined) {\n      let endpoint = `/api/questions/${ to.params.slug }/`;\n      let data = await apiService(endpoint);\n      return next(vm => (vm.question_body = data.content))\n    } else {\n      return next();\n    }   \n  },\n  created() {\n    document.title = \"Editor - QuestionTime\";\n  }  \n}\n</script>\n"]}]}